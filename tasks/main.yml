---
# tasks file for install-dashboard-nfs-awx

- name: Deploy Dashboard
  kubernetes.core.helm:
    state: "{{ state | default('present') }}"
    name: kubernetes-dashboard
    create_namespace: true
    chart_ref: "{{ webserver }}/helm/{{ k3s_dashboard_helm_chart }}"
    release_namespace: kubernetes-dashboard
    values:
      app:    
        settings:
          ingress:
            enabled: true
            useDefaultIngressClass: true
            hosts:
              - "{{ ingress_hosts_dashboard }}"
      kong:
        env:
          dns_order: LAST,A,CNAME,AAAA,SRV
          plugins: 'off'
          nginx_worker_processes: 1
          ssl_cert: /certs/tls.crt
          ssl_cert_key: /certs/tls.key
        deployment:
          userDefinedVolumes:
            - name: kubernetes-dashboard-certs
              secret:
                secretName: kubernetes-dashboard-certs
          userDefinedVolumeMounts:
            - name: kubernetes-dashboard-certs
              mountPath: /certs

- name: Create Ingress TLS Secret for Kubernetes-Dashboard
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: Secret
      type: Opaque             
      metadata:
        name: kubernetes-dashboard-certs
        namespace: kubernetes-dashboard
      data:
        tls.crt: "{{ lookup('file', 'roles/install-dashboard-nfs-awx/files/my.lab.pem') | b64encode }}"
        tls.key: "{{ lookup('file', 'roles/install-dashboard-nfs-awx/files/my.lab.key.pem') | b64encode }}"

- name: Create IngressRouteTCP for kubernetes-dashboard
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRouteTCP
      metadata:
        name: ingressroute-kubernetes-dashboard
        namespace: kubernetes-dashboard
      spec:
        routes:
        - match: HostSNI(`{{ ingress_hosts_dashboard }}`)
          services:
              - name: kubernetes-dashboard-kong-proxy
                port: 443
        tls:
          passthrough: true 

- name: Deploy nfs-subdir-external-provisioner chart from webserver
  kubernetes.core.helm:
    state: "{{ state | default('present') }}"
    name: nfs-subdir-external-provisioner
    create_namespace: true
    chart_ref: "{{ webserver }}/helm/{{ k3s_nfs_provisioner_helm_chart }}"
    release_namespace: nfs-subdir-external-provisioner
    set_values:
      - value: "nfs.server={{ k3s_nfs_server }}"
      - value: "nfs.path={{ k3s_nfs_path }}"
      - value: storageClass.defaultClass=true

- name: Deploy awx-operator chart from webserver
  kubernetes.core.helm:
    state: "{{ state | default('present') }}"
    name: awx-operator
    create_namespace: true
    chart_ref: "{{ webserver }}/helm/{{ k3s_awx_operator_helm_chart }}"
    release_namespace: awx

- name: Create Ingress TLS Secret for AWX
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: Secret
      type: Opaque             
      metadata:
        name: "{{ ingress_tls_secret }}"
        namespace: awx
      data:
        tls.crt: "{{ lookup('file', 'roles/install-dashboard-nfs-awx/files/my.lab.pem') | b64encode }}"
        tls.key: "{{ lookup('file', 'roles/install-dashboard-nfs-awx/files/my.lab.key.pem') | b64encode }}"

- name: Deploy AWX Instance
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    namespace: awx
    apply: yes
    wait: yes
    definition:
      apiVersion: awx.ansible.com/v1beta1
      kind: AWX
      metadata:
        name: "{{ instance_name }}"
      spec:
        image: "{{ image | default(omit) }}"
        image_version: "{{ image_version | default(omit) }}"

        image_pull_policy: "{{ image_pull_policy | default(omit) }}"
        no_log: "{{ no_log | default(omit) }}" # false

        admin_user: admin
        admin_email: admin@localhost
        
        auto_upgrade: "{{ auto_upgrade }}"

        ingress_type: "{{ ingress_type | default(omit) }}"  # Either none, Ingress, Route
        ingress_tls_secret: "{{ ingress_tls_secret | default(omit) }}"
        ingress_hosts:
        - hostname: "{{ ingress_hosts_awx | default(omit) }}"
        ingress_path: "{{ ingress_path | default(omit) }}" # localhost
        ingress_path_type: "{{ ingress_path_type | default(omit) }}" # Prefix

        development_mode: "{{ development_mode | default(omit) | bool }}"

        nodeport_port: "{{ nodeport_port | default(omit) }}"

        replicas: 1

        ipv6_disabled: "{{ ipv6_disabled | default(omit) }}" # true

        projects_persistence: "{{ projects_persistence | default(omit) }}" # true
        projects_storage_class: "{{ projects_storage_class | default(omit) }}" # standard
        projects_storage_size: "{{ projects_storage_size | default(omit) }}" # 1Gi

        # ldap_cacert_secret: "{{instance_name}}-custom-certs"
        # ldap_password_secret: "{{instance_name}}-ldap-password"
        # bundle_cacert_secret: "{{instance_name}}-custom-certs"
